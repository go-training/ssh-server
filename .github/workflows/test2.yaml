name: Test Private Key

on: [push]

jobs:
  setup-ssh-server:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: add public key to env
        run: |
          echo "PUBLIC_KEY<<EOF" >> $GITHUB_ENV
          cat testdata/.ssh/id_rsa.pub >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          echo "======= public key ========="
          cat testdata/.ssh/id_rsa.pub
          echo "============================"
          echo "PRIVATE_KEY<<EOF" >> $GITHUB_ENV
          cat testdata/.ssh/id_rsa >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          echo "======= private key ========="
          cat testdata/.ssh/id_rsa
          echo "============================"

      - name: create new ssh server
        run: |
          docker run -d \
          --name=openssh-server \
          --hostname=openssh-server \
          -p 2222:2222 \
          -e SUDO_ACCESS=false \
          -e PASSWORD_ACCESS=true  \
          -e USER_PASSWORD=password  \
          -e USER_NAME=linuxserver.io \
          -e PUBLIC_KEY="${{ env.PUBLIC_KEY }}" \
          --restart unless-stopped \
          lscr.io/linuxserver/openssh-server:latest
          docker exec openssh-server sh -c "hostname -i" > ip.txt
          echo "REMOTE_HOST<<EOF" >> $GITHUB_ENV
          cat ip.txt >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          echo "======= container ip address ========="
          cat ip.txt
          echo "======================================"
          sleep 2

      - name: executing remote ssh commands using password (1.0.3)
        uses: appleboy/ssh-action@v1.0.3
        if: always()
        with:
          host: ${{ env.REMOTE_HOST }}
          username: linuxserver.io
          key: ${{ env.PRIVATE_KEY }}
          port: 2222
          script: whoami

  setup-ssh-service:
    runs-on: ubuntu-latest

    services:
      sshd:
        image: lscr.io/linuxserver/openssh-server:latest
        ports:
          - 2222:2222
        env:
          PASSWORD_ACCESS: true
          USER_NAME: password
          POSTGRES_DB: linuxserver.io

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get sshd container IP
        id: sshd
        run: |
          SSHD_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' ${{ job.services.sshd.id }})
          echo "SSHD IP: $SSHD_IP"
          echo "::set-output name=sshd_ip::$SSHD_IP"

      - name: Run tests
        run: |
          SSHD_IP=${{ steps.sshd.outputs.sshd_ip }}
          echo "SSHD IP: $SSHD_IP"
          # 在這裡運行你的測試命令，並使用獲取到的 IP 地址
          echo "Running tests..."
